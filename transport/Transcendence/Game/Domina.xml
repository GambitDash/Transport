<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<Sovereign UNID="&svDomina;"
			name="Domina"
			alignment="constructive chaos"
			/>

	<!-- Domina's Circle of Wrath -->

	<ItemType UNID="&itCircleOfWrathPower;"
			name=				"Circle of Wrath"
			virtual=			"true"
			level=				"6"
			>

		<Weapon
				type=				"area"

				damage=				"darkLightning:6d6"
				fireRate=			"30"
				expansionSpeed=		"20"
				missileSpeed=		"0"
				lifetime=			"40"
				powerUse=			"200"
				>

			<Effect>
				<Shockwave
						style=			"glowRing"
						width=			"2"
						glowSize=		"12"
						primaryColor=	"0xff, 0xff, 0xff"
						secondaryColor=	"0xff, 0x00, 0xff"
						/>
			</Effect>

		</Weapon>

	</ItemType>

	<!-- Domina's Shatter -->

	<ItemType UNID="&itShatterPower;"
			name=				"Shatter"
			virtual=			"true"
			level=				"8"
			>

		<Weapon
				type=				"area"

				damage=				"darkSteel:8d12; shatter5"
				fireRate=			"30"
				expansionSpeed=		"80"
				missileSpeed=		"0"
				lifetime=			"20"
				powerUse=			"500"
				>

			<Effect>
				<Shockwave
						style=			"image"
						>
					<Image imageID=				"&rsShatterShockwave;"
							imageX=				"0" 
							imageY=				"0" 
							imageWidth=			"512" 
							imageHeight=		"128"
							/>
				</Shockwave>
			</Effect>

		</Weapon>

	</ItemType>

<!-- Powers of Domina -->

	<Power UNID="&pwSustain;"
			name=		"Sustain"
			modifiers=	"Domina"
			key=		"A"
			>

		<OnShow>
			(domShowPower 1)
		</OnShow>
		
		<OnInvokedByPlayer>
			(domInvokePower 1)
		</OnInvokedByPlayer>

		<Invoke>
			(block Nil
				(shpAddEnergyField gSource &sfSustain; 500)
				(objSendMessage gSource Nil "Invoked the sustaining powers of Domina!")
				)
		</Invoke>
	</Power>

	<Power UNID="&pwHeal;"
			name=		"Restore"
			modifiers=	"Domina"
			key=		"B"
			>

		<OnShow>
			(domShowPower 2)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 2)
		</OnInvokedByPlayer>

		<Invoke>
			(block (shieldLevel)
				(setq shieldLevel (objGetShieldLevel gSource))
							
				(switch
					; If no shields, then repair armor
					(eq shieldLevel -1)
						(block Nil
							(intArmorRepairAll gSource 25)
							(objSendMessage gSource Nil "Invoked the repairing powers of Domina!")
							)

					; If shields are down, then restore shields
					(ls shieldLevel 100)
						(block Nil
							(shpRechargeShield gSource 1000)
							(objSendMessage gSource Nil "Invoked the restoring powers of Domina!")
							)

					; Otherwise, nothing
					(objSendMessage gSource Nil "\"I cannot help you, child\"")
					)
				)
		</Invoke>
	</Power>

	<Power UNID="&pwStrengthen;"
			name=		"Strengthen"
			modifiers=	"Domina"
			key=		"C"
			>

		<OnShow>
			(domShowPower 2)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 2)
		</OnInvokedByPlayer>

		<Invoke>
			(block Nil
				(shpAddEnergyField gSource &sfStrengthen; 600)
				(objSendMessage gSource Nil "Invoked the strength of Domina!")
				)
		</Invoke>
	</Power>

	<Power UNID="&pwDefend;"
			name=		"Defend"
			modifiers=	"Domina"
			key=		"D"
			>

		<OnShow>
			(domShowPower 3)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 3)
		</OnInvokedByPlayer>

		<Invoke>
			(block (level duration)
				(setq level (typGetGlobalData &stDomina; "level"))
				(if (gr level 3)
					(setq duration (add 150 (multiply 100 (subtract level 3))))
					(setq duration 150)
					)
				(shpAddEnergyField gSource &sfDefend; duration)
				(objSendMessage gSource Nil "Invoked the defensive powers of Domina!")
				)
		</Invoke>
	</Power>

	<Power UNID="&pwNebularSight;"
			name=		"Nebular Sight"
			modifiers=	"Domina"
			key=		"E"
			>

		<OnShow>
			(domShowPower 3)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 3)
		</OnInvokedByPlayer>

		<Invoke>
			(block (found)
				; Iterate over all stations in the system
				(setq found 0)
				(enum (sysFindObject gSource "Ts") obj
					; If in a nebula and unknown, set to known
					(if (and
							(not (objIsKnown obj))
							(envHasAttribute (sysGetEnvironment obj) 'nebula))
						(block Nil
							(objSetKnown obj)
							(setq found (add found 1))
							)
						)
					)
					 
				(if found
					(objSendMessage gSource Nil "A vision from Domina reveals hidden stations")
					(objSendMessage gSource Nil "Nothing new is revealed to you")
					)
				)
		</Invoke>
	</Power>

	<Power UNID="&pwCircleOfWrath;"
			name=		"Circle of Wrath"
			modifiers=	"Domina"
			key=		"F"
			>

		<OnShow>
			(domShowPower 4)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 4)
		</OnInvokedByPlayer>

		<Invoke>
			(block (objVel)
				(setq objVel (objGetVel gSource))
				(sysCreateWeaponFire 
					&itCircleOfWrathPower;
					gSource
					(objGetPos gSource)
					(sysVectorAngle objVel)
					(sysVectorSpeed objVel)
					Nil
					)
				)
		</Invoke>
	</Power>

	<Power UNID="&pwIngenuity;"
			name=		"Ingenuity"
			modifiers=	"Domina"
			key=		"G"
			>

		<OnShow>
			(domShowPower 4)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 4)
		</OnInvokedByPlayer>

		<Invoke>
			(block (roll desc)
				(setq roll (random 1 100))
				
				(switch
					; Nothing happens
					(leq roll 10)
						(setq desc "Nothing new is revealed to you")
										  
					; HP bonus to armor
					(leq roll 50)
						(block (itemToImprove)
							; Pick a random installed armor that has not been enhanced
							(setq itemToImprove
								(random
									(filter (objGetItems gSource "aI") theArmor
										(not (itmIsEnhanced theArmor))
										)
									)
								)
								 
							; If found, improve it
							(if itemToImprove
								(block Nil
									(shpEnhanceItem gSource itemToImprove (if (leq roll 35) 0x0102 0x0105))
									(setq desc (cat "Domina reveals a way to strengthen your " (objGetArmorName gSource itemToImprove) " " (itmGetName itemToImprove 0xa0)))
									)
								(setq desc "Nothing new is revealed to you")
								)
							)
							 
					; HP bonus to shields
					(leq roll 75)
						(block (itemToImprove)
							(setq itemToImprove
								(item
									(filter (objGetItems gSource "sI") theItem
										(and (not (itmIsDamaged theItem)) (not (itmIsEnhanced theItem)))
										)
									0
									)
								)

							; If found, improve it
							(if itemToImprove
								(block Nil
									(shpEnhanceItem gSource itemToImprove (switch (leq roll 65) 0x0102 (leq roll 70) 0x0104 0x0f01))
									(if (leq roll 70)
										(setq desc (cat "Domina reveals a way to strengthen your " (itmGetName itemToImprove 0xa0)))
										(setq desc (cat "Domina reveals efficiency improvements to your " (itmGetName itemToImprove 0xa0)))
										)
									)
								(setq desc "Nothing new is revealed to you")
								)
							)
							 
					; Damage bonus to weapons
					(leq roll 90)
						(block (itemToImprove)
							; Pick a random installed weapon that has not been enhanced
							(setq itemToImprove
								(random
									(filter (objGetItems gSource "wI") theItem
										(and (not (itmIsDamaged theItem)) (not (itmIsEnhanced theItem)))
										)
									)
								)
								 
							; If found, improve it
							(if itemToImprove
								(block Nil
									(shpEnhanceItem gSource itemToImprove (if (leq roll 85) 0x0102 0x0104))
									(setq desc (cat "Domina reveals a way to improve your " (itmGetName itemToImprove 0xa0)))
									)
								(setq desc "Nothing new is revealed to you")
								)
							)
							 
					; Enhancement to reactor or drive
					(leq roll 100)
						(block (itemToImprove)
							(setq itemToImprove
								(random
									(filter (objGetItems gSource "rvI") theItem
										(and (not (itmIsDamaged theItem)) (not (itmIsEnhanced theItem)))
										)
									)
								)

							; If found, improve it
							(if itemToImprove
								(block Nil
									(shpEnhanceItem gSource itemToImprove)
									(setq desc (cat "Domina reveals a way to enhance your " (itmGetName itemToImprove 0xa0)))
									)
								(setq desc "Nothing new is revealed to you")
								)
							)
					)

				; Done
				(objSendMessage gSource Nil desc)
				)
		</Invoke>
	</Power>

	<Power UNID="&pwDesperateEscape;"
			name=		"Desperate Escape"
			modifiers=	"Domina"
			key=		"H"
			>

		<OnShow>
			(domShowPower 5)
		</OnShow>

		<OnDestroyCheck>
			(if (domShowPower 5)
				(block Nil
					(domInvokePower 5)

					(shpAddEnergyField gSource &sfSustain; 180)
					(objSendMessage gSource Nil "Escape while you can, child!")

					; Avoid destruction
					Nil
					)

				; Destruction proceeds
				True
				)
		</OnDestroyCheck>

		<Invoke>
			(objSendMessage gSource Nil "You feel that Domina is watching out for you")
		</Invoke>
	</Power>

	<Power UNID="&pwShatter;"
			name=		"Shatter"
			modifiers=	"Domina"
			key=		"I"
			>

		<OnShow>
			(domShowPower 5)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 5)
		</OnInvokedByPlayer>

		<Invoke>
			(block (objVel)
				(setq objVel (objGetVel gSource))
				(sysCreateWeaponFire 
					&itShatterPower;
					gSource
					(objGetPos gSource)
					(sysVectorAngle objVel)
					(sysVectorSpeed objVel)
					Nil
					)
				)
		</Invoke>
	</Power>

	<Power UNID="&pwPrescience;"
			name=		"Prescience"
			modifiers=	"Domina"
			key=		"J"
			>

		<OnShow>
			Nil
			;(domShowPower 6)
		</OnShow>

		<OnInvokedByPlayer>
			(domInvokePower 6)
		</OnInvokedByPlayer>

		<Invoke>
			(block Nil
				(plyMessage gPlayer "Invoked PRESCIENCE")
				)
		</Invoke>
	</Power>


<!-- Effects -->

	<ShipEnergyFieldType UNID="&sfSustain;"
			absorbAdj=		"100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100"
			weaponSuppress=	"*"
			>
		<Effect>
			<Image imageID="&rsDominaEffects1;" 
					imageX="0" 
					imageY="0" 
					imageWidth="96" 
					imageHeight="96"
					imageFrameCount="3"
					imageTicksPerFrame="3"/>
		</Effect>
		
		<HitEffect
				sound="&snShieldHit1;"
				>
			<Image imageID="&rsDominaEffects1;" 
					imageX="288" 
					imageY="0" 
					imageWidth="96" 
					imageHeight="96"
					imageFrameCount="3"
					imageTicksPerFrame="3"/>
		</HitEffect>
	</ShipEnergyFieldType>

	<ShipEnergyFieldType UNID="&sfStrengthen;"
			weaponBonusAdj=	"100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100"
			>
		<Effect>
			<Starburst
					spikeCount=		"20"
					spikeLength=	"4d8"
					primaryColor=	"0x80, 0xff, 0xff"
					secondaryColor=	"0x00, 0xff, 0xff"
					/>
		</Effect>
	</ShipEnergyFieldType>

	<ShipEnergyFieldType UNID="&sfDefend;"
			absorbAdj=		"100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100"
			>
		<Effect>
			<Image imageID="&rsDominaEffects1;" 
					imageX="0" 
					imageY="96" 
					imageWidth="96" 
					imageHeight="96"
					imageFrameCount="3"
					imageTicksPerFrame="3"/>
		</Effect>
		
		<HitEffect
				sound="&snShieldHit1;"
				>
			<Image imageID="&rsDominaEffects1;" 
					imageX="288" 
					imageY="96" 
					imageWidth="96" 
					imageHeight="96"
					imageFrameCount="3"
					imageTicksPerFrame="3"/>
		</HitEffect>
	</ShipEnergyFieldType>
		
<!-- Stations -->
	
	<!-- Domina
	
	GLOBAL DATA

	gainLevel:			If not Nil, then the player has gained a level

	lastInvokeTime{n}:	Ticks at which player last invoked a power of level n

	level:				Player's level:
							Nil	= Not yet initialized
							1	= Novice
							2	= Acolyte
							3	= Adept
							4	= Curate
							5	= Canon
							6	= Matriarch/Patriarch

	xp:					Number of experience points

	-->

	<StationType UNID="&stDomina;"
			name=				"(domina)"
			sovereign=			"&svDomina;"
			>
	</StationType>

	<Globals>
		(block Nil
			(setq domGainXP (lambda (xpGain)
				(block (level)
					(setq level (domInitRelationship))
					(setq xp (typGetGlobalData &stDomina; "xp"))

					(setq xp (add xp xpGain))
					(typSetGlobalData &stDomina; "xp" xp)

					; See if we went up a level
					(setq newLevel (domGetLevel xp))
					(if (gr newLevel level)
						(block Nil
							(typSetGlobalData &stDomina; "level" newLevel)
							(typSetGlobalData &stDomina; "gainLevel" level)
							(setq level newLevel)
							)
						)

					level
					)
				))

			(setq domGetLevel (lambda (xp)
				(switch
					(ls xp 250)		1
					(ls xp 500)		2
					(ls xp 1000)	3
					(ls xp 2000)	4
					(ls xp 4000)	5
									6
					)
				))

			(setq domGetTimeRequired (lambda (levelReq)
				; time = level^2 - 2*(level - 1)
				(item '(0 1800 3600 9000 18000 30600 46800 66600 90000 117000 147600) levelReq)
				))

			(setq domInitRelationship (lambda ()
				(block (level)
					(if (not (setq level (typGetGlobalData &stDomina; "level")))
						(block Nil
							(typSetGlobalData &stDomina; "level" 1)
							(typSetGlobalData &stDomina; "xp" 0)
							1
							)
						level
						)
					)
				))

			(setq domInvokePower (lambda (levelReq)
				(if (eq levelReq 1)
					; Sustain can always be invoked, but doesn't always work
					(block (lastInvokeTime timeReq timeWaited)
						(setq lastInvokeTime (typGetGlobalData &stDomina; "lastInvokeTime1"))
						(if (not lastInvokeTime) (setq lastInvokeTime 0))
						(setq timeReq (domGetTimeRequired 1))
						(setq timeWaited (subtract (unvGetTick) lastInvokeTime))
						
						(switch
							; If we've waited long enough, it works
							(geq timeWaited timeReq)
								(block Nil
									(typSetGlobalData &stDomina; "lastInvokeTime1" (unvGetTick))
									True
									)
									 
							; If the player has no experience, then warn
							(not (typGetGlobalData &stDomina; "xp"))
								(block Nil
									(plyMessage gPlayer "\"Allowing you to struggle is the best help I can offer\"")
									Nil
									)

							; Otherwise warn
							(block Nil
								(plyMessage gPlayer "\"Do not rely on my powers, child\"")
								Nil
								)
							)
						)

					; All other powers only show up on the menu if they can be invoked
					(block Nil
						(typSetGlobalData &stDomina; (cat "lastInvokeTime" levelReq) (unvGetTick))
						True
						)
					)
				))

			(setq domShowPower (lambda (levelReq)
				(switch
					; Always show level 1 power (sustain)
					(eq levelReq 1)
						True

					; Do not show powers that are above our level
					(gr levelReq (domInitRelationship))
						Nil

					; Do not show powers for levels that have been recently invoked
					(block (lastInvokeTime timeReq timeWaited)
						(setq lastInvokeTime (typGetGlobalData &stDomina; (cat "lastInvokeTime" levelReq)))
						(if (not lastInvokeTime) (setq lastInvokeTime 0))
						(setq timeReq (domGetTimeRequired levelReq))
						(setq timeWaited (subtract (unvGetTick) lastInvokeTime))

						(geq timeWaited timeReq)
						)
					)
				))
			)
	</Globals>

	<!-- Resources -->

	<Image UNID="&rsDominaEffects1;"	bitmap="Resources\MediumEffects.jpg"	bitmask="Resources\MediumEffectsMask.bmp"/>
	<Image UNID="&rsShatterShockwave;"	bitmap="Resources\ShatterShockwave.jpg"	bitmask="Resources\ShatterShockwaveMask.bmp"/>

</TranscendenceModule>